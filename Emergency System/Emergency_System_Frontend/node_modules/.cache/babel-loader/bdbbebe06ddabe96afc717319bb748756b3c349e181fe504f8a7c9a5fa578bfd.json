{"ast":null,"code":"var _jsxFileName = \"C:\\\\Emergency System\\\\Emergency_System_Frontend\\\\src\\\\components\\\\EmergencyMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport axios from \"axios\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencyMap = () => {\n  _s();\n  const [routeCoords, setRouteCoords] = useState([]);\n  const ambulancePos = [12.9716, 77.5946]; // Example: Bangalore\n  const accidentPos = [12.9279, 77.6271]; // Example: Some location\n\n  useEffect(() => {\n    const getRoute = async () => {\n      try {\n        const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${ambulancePos[1]},${ambulancePos[0]};${accidentPos[1]},${accidentPos[0]}?overview=full&geometries=geojson`);\n        const coords = response.data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        setRouteCoords(coords);\n      } catch (err) {\n        console.error(\"Routing error:\", err);\n      }\n    };\n    getRoute();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: ambulancePos,\n    zoom: 13,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 OpenStreetMap contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: ambulancePos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: accidentPos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: routeCoords,\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyMap, \"GS57BRJLyScr3aRrXFgGIK3pBzE=\");\n_c = EmergencyMap;\nexport default EmergencyMap;\nvar _c;\n$RefreshReg$(_c, \"EmergencyMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Polyline","axios","jsxDEV","_jsxDEV","EmergencyMap","_s","routeCoords","setRouteCoords","ambulancePos","accidentPos","getRoute","response","get","coords","data","routes","geometry","coordinates","map","coord","err","console","error","center","zoom","style","height","width","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","position","positions","color","_c","$RefreshReg$"],"sources":["C:/Emergency System/Emergency_System_Frontend/src/components/EmergencyMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst EmergencyMap = () => {\r\n  const [routeCoords, setRouteCoords] = useState([]);\r\n  const ambulancePos = [12.9716, 77.5946]; // Example: Bangalore\r\n  const accidentPos = [12.9279, 77.6271]; // Example: Some location\r\n\r\n  useEffect(() => {\r\n    const getRoute = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://router.project-osrm.org/route/v1/driving/${ambulancePos[1]},${ambulancePos[0]};${accidentPos[1]},${accidentPos[0]}?overview=full&geometries=geojson`\r\n        );\r\n        const coords = response.data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\r\n        setRouteCoords(coords);\r\n      } catch (err) {\r\n        console.error(\"Routing error:\", err);\r\n      }\r\n    };\r\n\r\n    getRoute();\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={ambulancePos} zoom={13} style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <TileLayer\r\n        attribution=\"&copy; OpenStreetMap contributors\"\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={ambulancePos} />\r\n      <Marker position={accidentPos} />\r\n      <Polyline positions={routeCoords} color=\"red\" />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default EmergencyMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMY,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;EACzC,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;EAExCd,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,oDAAoDJ,YAAY,CAAC,CAAC,CAAC,IAAIA,YAAY,CAAC,CAAC,CAAC,IAAIC,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,mCAC5H,CAAC;QACD,MAAMI,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,WAAW,CAACC,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9FZ,cAAc,CAACM,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MACtC;IACF,CAAC;IAEDV,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACN,YAAY;IAAC0B,MAAM,EAAEf,YAAa;IAACgB,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtFzB,OAAA,CAACL,SAAS;MACR+B,WAAW,EAAC,iCAAmC;MAC/CC,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACF/B,OAAA,CAACJ,MAAM;MAACoC,QAAQ,EAAE3B;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC/B,OAAA,CAACJ,MAAM;MAACoC,QAAQ,EAAE1B;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjC/B,OAAA,CAACH,QAAQ;MAACoC,SAAS,EAAE9B,WAAY;MAAC+B,KAAK,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEnB,CAAC;AAAC7B,EAAA,CAhCID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}